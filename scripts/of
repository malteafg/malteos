#!/bin/bash

HOME_DIR=""
HOME_PATH=""
SEARCH_DIRS=""
EXCLUDED_DIRS=""
NEWWINDOW="0"
DIR="0"

while getopts ":hend" opt; do
    case $opt in
        h) 
            HOME_DIR="--base-directory $HOME"
            HOME_PATH="$HOME/"
            SEARCH_DIRS="dotfiles/ repos/ files/ malteos/ largefiles/"
            ;;
        e)
            EXCLUDED_DIRS="-E files/minecraft/ -E files/dotbot/ -E dotfiles/dotbot/"
            ;;
        n)
            NEWWINDOW="1"
            ;;
        d)
            DIR="1"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit
            ;;
    esac
done

check_cmd () {
    if command -v "$1" &> /dev/null
    then
        return 0
    else
        return 1
    fi
}

send () {
    echo "$1" >> $HOME/.cache/ofcmd
}

sendfile () {
    fileext=$(echo $1 | cut -d. -f2)
    path="$HOME_PATH$1"
    case $fileext in
        link)
            send "$BROWSER $(cat $path)";;
        pdf)
            send "zathura --fork $path";;
        lua|toml)
            dirpath=$(printgitdir $path)
            send "alacritty -e nvim -c \"cd $dirpath\" $path";;
        mscz)
            send "mscore $path";;
        *)
            filetype=$(file --mime-type $path | cut -d\  -f2)
            case $filetype in
                text*|*json*)
                    dirpath=$(printgitdir $path)
                    echo $dirpath
                    send "alacritty -e nvim -c \"cd $dirpath\" $path";;
                image*)
                    send "sxiv $path";;
                audio*)
                    send "mpv --player-operation-mode=pseudo-gui $path";;
                video*)
                    send "mpv $path";;
                *)
                    echo $path | xargs -ro -d "\n" xdg-open 2>&-;
                    ;;
            esac
            ;;
    esac
}

findfile () {
    if check_cmd "bat"; then
        preview="bat --color=always --style=numbers --line-range=:500 $HOME_PATH{}"
    else
        preview="cat -n $HOME_PATH{}"
    fi
        
    fd . $SEARCH_DIRS $HOME_DIR -t f $EXCLUDED_DIRS | 
        fzf -m --preview="$preview" | while read line ; do
        sendfile "$line"
    done

    if [ "$NEWWINDOW" -eq "0" ]; then
        cmd=`cat $HOME/.cache/ofcmd`
        ccmd=${cmd#"alacritty -e "}
        eval $ccmd
    fi
}

finddir () {
    path=$(fd $HOME_DIR -t d -I $EXCLUDED_DIRS |
        fzf --preview="tree -L 1 $HOME_PATH{}")
    [[ ! -z "${path}" ]] && echo "$HOME_PATH$path" >> $HOME/.cache/ofcmd
}

> $HOME/.cache/ofcmd
if [ "$DIR" -eq "0" ]; then
    findfile
else
    finddir
fi

